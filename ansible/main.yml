- name: Setup server
  hosts: all
  tasks:
    - name: install packages
      become: true
      apt:
        name: "{{ item }}"
      vars:
        item:
          - vim
          - git
          - rsync
          - curl
          - nginx
          - tmux
          - zsh
          - build-essential
          - zlib1g-dev
          - libncurses-dev
          - libssl-dev
          - liblzma-dev
          - libsqlite3-dev
          - libbz2-dev
          - libreadline-dev
          - mysql-server
    - name: Install Cloudflared
      block:
        - name: create directory
          become: true
          file:
            path: /usr/share/keyrings
            state: directory
            mode: '0755'
        - name: Add Cloudflare’s package signing key
          become: true
          get_url:
            url: https://pkg.cloudflare.com/cloudflare-main.gpg
            dest: /usr/share/keyrings/cloudflare-main.gpg
        - name: Add Cloudflare’s package repository
          become: true
          apt_repository:
            repo: deb [signed-by=/usr/share/keyrings/cloudflare-main.gpg] https://pkg.cloudflare.com/cloudflared jammy main
            state: present
        - name: Install Cloudflared
          become: true
          apt:
            name: cloudflared
    - name: setup nginx
      block:
        - name: setup directory
          become: true
          file:
            path: /var/www/isucon-webapp
            state: directory
            mode: '0755'
            owner: ubuntu
        - name: setup nginx
          become: true
          copy:
            src: files/nginx-default.conf
            dest: /etc/nginx/sites-available/default
        - name: enable site
          become: true
          file:
            src: /etc/nginx/sites-available/default
            dest: /etc/nginx/sites-enabled/default
            state: link
        - name: restart nginx
          become: true
          service:
            name: nginx
            state: restarted
    - name: setup gh-cli
      block:
        - name: check gh command
          command: gh --version
      rescue:
        - name: Add githubcli’s package signing key
          become: true
          get_url:
            url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
            dest: /etc/apt/keyrings/githubcli-archive-keyring.gpg
        - name: add gh-cli repository
          become: true
          apt_repository:
            repo: deb [arch=amd64 signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main
            state: present
        - name: install gh-cli
          become: true
          apt:
            name: gh
    - name: setup alp
      block:
        - name: check alp command
          command: alp --version
      rescue:
        - name: download alp zip
          get_url:
            url: https://github.com/tkuchiki/alp/releases/download/v1.0.21/alp_linux_amd64.tar.gz
            dest: "/tmp/alp.tar.gz"
            mode: '0644'
        - name: extract alp
          become: true
          unarchive:
            src: "/tmp/alp.tar.gz"
            dest: "/tmp/"
            remote_src: true
        - name: install alp
          become: true
          shell: install "/tmp/alp" /usr/local/bin/alp
    - name: generate ssh key
      block:
        - name: check ssh key
          stat: path=/home/ubuntu/.ssh/id_ed25519
          register: ssh_key
        - name: create directory
          file:
            path: /home/ubuntu/.ssh
            state: directory
          when: ssh_key.stat.exists == False
        - name: generate ssh key
          shell: ssh-keygen -t ed25519 -f /home/ubuntu/.ssh/id_ed25519 -q -N ""
          when: ssh_key.stat.exists == False
    - name: setup db
      become: true
      shell: |
        mysql -u root -e "CREATE USER IF NOT EXISTS 'isucon'@'localhost' IDENTIFIED BY 'isucon';"
        mysql -u root -e "GRANT ALL PRIVILEGES ON *.* TO 'isucon'@'localhost';"
        mysql -u root -e "CREATE DATABASE IF NOT EXISTS webapp;"
    - name: create systemd directory
      become: true
      file:
        path: /etc/systemd/system
        state: directory
    - name: setup backend service
      become: true
      template:
        src: files/isucon-webapp-backend.service.j2
        dest: /etc/systemd/system/isucon-webapp-backend.service
